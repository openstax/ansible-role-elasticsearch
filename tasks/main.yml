- name: Fetch elasticsearch source archive search version.
  become: yes
  get_url: 
    dest: "/tmp/{{ es_pkg_name}}.tar.gz" 
    url: "https://download.elasticsearch.org/elasticsearch/elasticsearch/{{ es_pkg_name }}.tar.gz"
    force: yes

- name: untar the elasticsearch source archive
  become: yes
  unarchive:
    remote_src: yes 
    src: "/tmp/{{ es_pkg_name }}.tar.gz"
    dest: /tmp 
    mode: 0755

- name: Check and see if the elasticsearch dir has been created
  stat:
    path: /usr/share/elasticsearch
  register: es_home

#   file:
#     path: /usr/share/elasticsearch  
#     state: directory
#     mode: 0750
#   when: not es_home.stat.exists

- name: Copy the unarchived elasticsearch to main directory
  become: yes
  command: "mv /tmp/{{ es_pkg_name }} /usr/share/elasticsearch"
  when: not es_home.stat.exists

- name: Configure Elasticsearch
  become: yes
  template:
    src: elasticsearch.yml
    dest: /usr/share/elasticsearch/elasticsearch.yml
    mode: 0750
    force: yes
  notify: restart elasticsearch

- name: install elastic search service files
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: elasticsearch.service, dest: /lib/systemd/system/elasticsearch.service }
  tags:
    - elasticsearch-service

- name: Start Elasticsearch
  become: yes
  service:
    name: elasticsearch
    state: started
    enabled: yes

- name: Check and see if the elasticsearch dir has been created
  stat:
    path: /usr/share/elasticsearch/plugins/analysis-icu
  register: icu_plugin

- name: Install the ICU plugin
  become: yes
  command: "/usr/share/elasticsearch/bin/plugin install elasticsearch/elasticsearch-analysis-icu/2.5.0"
  when: not icu_plugin.stat.exists

- name: Make sure Elasticsearch is running
  wait_for: 
    host: "{{ es_network_host }}"
    port: "{{ es_http_port }}"
    delay: 3
    timeout: 300
